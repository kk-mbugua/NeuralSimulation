% autoConnectivity.m[nPat,nUnits] = size(P); % find numbers of patterns and unitsHP = zeros(nUnits); % define and zero PR and HP% this method implements the summation for each connection in turnfor i=1:nUnits % for each unit as the post-synaptic unit   for j=1:nUnits % for each unit as the pre-synaptic unit      for l=1:nPat % for each pattern (loop variable is letter l)	HPDW=(2*P(l,i) -1) * (2*P(l,j) -1); % compute Hopfield update	HP(i,j) = HP(i,j) + HPDW; % update connection in Hopfield      end % end pattern loop   end % end pre-synaptic unit loopend % end post-synaptic unit loop% HP=(2*P' -1) * (2*P -1); % compute Hopfield matrixMSK = (ones(nUnits) - eye(nUnits)); % construct the masking matrixHP = HP .* MSK; % zero self-connections in Hopfield matrix